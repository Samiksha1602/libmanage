{"ast":null,"code":"var _jsxFileName = \"D:\\\\sakshi college\\\\cc miniproject\\\\lib_management\\\\client\\\\src\\\\components\\\\ProfileComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader, Label, CardText, Button, Modal, ModalBody, ModalHeader, FormGroup } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nconst matchcreds = original => val => val === original;\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditModalOpen: false,\n      isPasswordModalOpen: false\n    };\n    this.toggleEditModal = this.toggleEditModal.bind(this);\n    this.togglePasswordModal = this.togglePasswordModal.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  togglePasswordModal() {\n    this.setState({\n      isPasswordModalOpen: !this.state.isPasswordModalOpen\n    });\n  }\n\n  toggleEditModal() {\n    this.setState({\n      isEditModalOpen: !this.state.isEditModalOpen\n    });\n  }\n\n  render() {\n    if (this.props.auth.userinfo === null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row heading\",\n        children: \"Failed to fetch. Please reload the page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-6 home text-center align-self-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row text-center justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"heading\",\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"My Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardText, {\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" First Name : \", '          ' + this.props.auth.userinfo.firstname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" Last Name : \", '          ' + this.props.auth.userinfo.lastname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" \", this.props.auth.userinfo.admin ? 'Admin Id : ' : 'Roll No.', \" : \", '          ' + this.props.auth.userinfo.roll]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\" Email : \", '          ' + this.props.auth.userinfo.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"info\",\n              onClick: this.toggleEditModal,\n              children: [\"Edit \\xA0\", '   ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-pencil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 81\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 11\n            }, this), ' ', this.props.auth.userinfo.admin ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              color: \"info\",\n              onClick: this.togglePasswordModal,\n              children: [\"Change Password \\xA0\", '   ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fa fa-key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 133\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isEditModalOpen,\n        toggle: this.toggleEditModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleEditModal,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            model: \"user\",\n            onSubmit: values => {\n              this.toggleEditModal();\n              this.props.editUser(this.props.auth.userinfo._id, values.firstname, values.lastname, values.roll, values.email);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstname\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".firstname\",\n                id: \"firstname\",\n                name: \"firstname\",\n                className: \"form-control\",\n                defaultValue: this.props.auth.userinfo.firstname,\n                placeholder: \"firstname\",\n                validators: {\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(20)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".firstname\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 2 characters',\n                  maxLength: ' Must be 20 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"lastname\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".lastname\",\n                id: \"lastname\",\n                name: \"lastname\",\n                className: \"form-control\",\n                defaultValue: this.props.auth.userinfo.lastname,\n                placeholder: \"lastname\",\n                validators: {\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(20)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".lastname\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 2 characters',\n                  maxLength: ' Must be 20 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"roll\",\n                children: \"Roll No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".roll\",\n                id: \"roll\",\n                name: \"roll\",\n                className: \"form-control\",\n                defaultValue: this.props.auth.userinfo.roll,\n                placeholder: \"roll\",\n                validators: {\n                  required,\n                  minLength: minLength(3),\n                  maxLength: maxLength(12)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".roll\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 2 characters',\n                  maxLength: ' Must be 12 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"email\",\n                children: \"E-mail\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Control.text, {\n                model: \".email\",\n                id: \"email\",\n                name: \"email\",\n                defaultValue: this.props.auth.userinfo.email,\n                className: \"form-control\",\n                placeholder: \"email\",\n                validators: {\n                  required,\n                  validEmail\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".email\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  validEmail: ' Enter a valid email'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              value: \"submit\",\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isPasswordModalOpen,\n        toggle: this.togglePasswordModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.togglePasswordModal,\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            model: \"passwordform\",\n            onSubmit: values => {\n              if (values.newpassword === values.confirm) {\n                this.togglePasswordModal();\n                this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, values.newpassword);\n              } else {\n                alert(\"Your passwords didn't match. Please try again\");\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"password\",\n                children: \"Current Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Control.password, {\n                model: \".password\",\n                id: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                placeholder: \"password\",\n                validators: {\n                  required,\n                  minLength: minLength(6),\n                  maxLength: maxLength(20),\n                  matchcreds: matchcreds(this.props.auth.user.password)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".password\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 5 characters',\n                  maxLength: ' Must be 20 characters or less',\n                  matchcreds: ' Enter the correct password'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"newpassword\",\n                children: \"New password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Control.password, {\n                model: \".newpassword\",\n                id: \"newpassword\",\n                name: \"newpassword\",\n                className: \"form-control\",\n                placeholder: \"New Password\",\n                validators: {\n                  required,\n                  minLength: minLength(6),\n                  maxLength: maxLength(20)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".newpassword\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 5 characters',\n                  maxLength: ' Must be 20 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"confirm\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Control.password, {\n                model: \".confirm\",\n                id: \"confirm\",\n                name: \"confirm\",\n                className: \"form-control\",\n                placeholder: \"Re-enter the new password\",\n                validators: {\n                  required,\n                  minLength: minLength(6),\n                  maxLength: maxLength(20)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                className: \"text-danger\",\n                model: \".confirm\",\n                show: \"touched\",\n                messages: {\n                  required: 'Required',\n                  minLength: ' Must be greater than 5 characters',\n                  maxLength: ' Must be 20 characters or less'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              value: \"submit\",\n              color: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["D:/sakshi college/cc miniproject/lib_management/client/src/components/ProfileComponent.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","CardText","Button","Modal","ModalBody","ModalHeader","FormGroup","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","validEmail","test","matchcreds","original","Profile","constructor","props","state","isEditModalOpen","isPasswordModalOpen","toggleEditModal","bind","togglePasswordModal","componentDidMount","window","scrollTo","setState","render","auth","userinfo","firstname","lastname","admin","roll","email","values","editUser","_id","newpassword","confirm","editPassword","user","username","alert","password"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAaC,QAAb,EAAsBC,UAAtB,EAAiCC,KAAjC,EAAuCC,QAAvC,EAAgDC,MAAhD,EAAuDC,KAAvD,EAA6DC,SAA7D,EAAuEC,WAAvE,EAAmFC,SAAnF,QAAmG,YAAnG;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,kBAA3C;;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAASA,GAAG,IAAIA,GAAG,CAACC,MAArC;;AACA,MAAMC,SAAS,GAAIC,GAAD,IAAUH,GAAD,IAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAA7D;;AACA,MAAMC,SAAS,GAAID,GAAD,IAAUH,GAAD,IAAUA,GAAD,IAAUA,GAAG,CAACC,MAAJ,IAAcE,GAA5D;;AACA,MAAME,UAAU,GAAIL,GAAD,IAAS,4CAA4CM,IAA5C,CAAiDN,GAAjD,CAA5B;;AACA,MAAMO,UAAU,GAAIC,QAAD,IAAeR,GAAD,IAAWA,GAAG,KAAGQ,QAAlD;;AAEA,MAAMC,OAAN,SAAsBxB,SAAtB,CAAgC;AAE5ByB,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,eAAe,EAAE,KADV;AAEPC,MAAAA,mBAAmB,EAAE;AAFd,KAAX;AAIA,SAAKC,eAAL,GAAqB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAArB;AACA,SAAKC,mBAAL,GAAyB,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAAzB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD;;AAEHH,EAAAA,mBAAmB,GAAE;AACjB,SAAKI,QAAL,CAAc;AACVP,MAAAA,mBAAmB,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADvB,KAAd;AAGH;;AAEDC,EAAAA,eAAe,GAAE;AACT,SAAKM,QAAL,CAAc;AAACR,MAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,KAAd;AACD;;AAGXS,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKX,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,KAA2B,IAA9B,EAAmC;AAC/B,0BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AACD,wBAEI;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA,+BAEA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,kCAEJ,QAAC,UAAD;AAAA,mCAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFI,eAGJ,QAAC,QAAD;AAAA,oCACE,QAAC,QAAD;AAAA,sCACA;AAAA,6CAAmB,eAAa,KAAKb,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAA,4CAAkB,eAAa,KAAKd,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBE,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAGA;AAAA,gCAAO,KAAKf,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBG,KAA1B,GAAiC,aAAjC,GAA+C,UAArD,SAAoE,eAAa,KAAKhB,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBI,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,eAIA;AAAA,wCAAc,eAAa,KAAKjB,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBK,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAqB,cAAA,OAAO,EAAE,KAAKd,eAAnC;AAAA,sCAAgE,KAAhE,eAAsE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASC,GATD,EAUP,KAAKJ,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBG,KAAzB,gBAA+B;AAAA;AAAA;AAAA;AAAA,oBAA/B,gBAA8C,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,MAAd;AAAqB,cAAA,OAAO,EAAE,KAAKV,mBAAnC;AAAA,iDAA+E,KAA/E,eAAqF;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAArF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,eAA1B;AAA2C,QAAA,MAAM,EAAE,KAAKE,eAAxD;AAAA,gCACS,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKA,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADT,eAIS,QAAC,SAAD;AAAA,iCACA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAwB,YAAA,QAAQ,EAAGe,MAAD,IAAY;AACpC,mBAAKf,eAAL;AACA,mBAAKJ,KAAL,CAAWoB,QAAX,CAAoB,KAAKpB,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBQ,GAA7C,EAAkDF,MAAM,CAACL,SAAzD,EACCK,MAAM,CAACJ,QADR,EACkBI,MAAM,CAACF,IADzB,EAC+BE,MAAM,CAACD,KADtC;AAEG,aAJb;AAAA,oCAKO,QAAC,SAAD;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD,CAAS,IAAT;AAAc,gBAAA,KAAK,EAAC,YAApB;AAAiC,gBAAA,EAAE,EAAC,WAApC;AAAgD,gBAAA,IAAI,EAAC,WAArD;AACJ,gBAAA,SAAS,EAAC,cADN;AACqB,gBAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBC,SAD5D;AAEH,gBAAA,WAAW,EAAC,WAFT;AAGH,gBAAA,UAAU,EAAE;AAAC1B,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD;AAArD;AAHT;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,YAAtC;AAAmD,gBAAA,IAAI,EAAC,SAAxD;AAAkE,gBAAA,QAAQ,EAAE;AAACH,kBAAAA,QAAQ,EAAE,UAAX;AAC5EK,kBAAAA,SAAS,EAAE,oCADiE;AAC3BF,kBAAAA,SAAS,EAAC;AADiB;AAA5E;AAAA;AAAA;AAAA;AAAA,sBANA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALP,eAcO,QAAC,SAAD;AAAA,sCACK,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADL,eAEI,QAAC,OAAD,CAAS,IAAT;AAAc,gBAAA,KAAK,EAAC,WAApB;AAAgC,gBAAA,EAAE,EAAC,UAAnC;AAA8C,gBAAA,IAAI,EAAC,UAAnD;AACJ,gBAAA,SAAS,EAAC,cADN;AACsB,gBAAA,YAAY,EAAE,KAAKS,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBE,QAD7D;AAEJ,gBAAA,WAAW,EAAC,UAFR;AAEmB,gBAAA,UAAU,EAAE;AAAC3B,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD;AAArD;AAF/B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,WAAtC;AAAkD,gBAAA,IAAI,EAAC,SAAvD;AAAiE,gBAAA,QAAQ,EAAE;AAACH,kBAAAA,QAAQ,EAAE,UAAX;AAC3EK,kBAAAA,SAAS,EAAE,oCADgE;AAC1BF,kBAAAA,SAAS,EAAC;AADgB;AAA3E;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdP,eAsBO,QAAC,SAAD;AAAA,sCACK,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADL,eAEI,QAAC,OAAD,CAAS,IAAT;AAAc,gBAAA,KAAK,EAAC,OAApB;AAA4B,gBAAA,EAAE,EAAC,MAA/B;AAAsC,gBAAA,IAAI,EAAC,MAA3C;AACJ,gBAAA,SAAS,EAAC,cADN;AACsB,gBAAA,YAAY,EAAE,KAAKS,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBI,IAD7D;AAEJ,gBAAA,WAAW,EAAC,MAFR;AAEe,gBAAA,UAAU,EAAE;AAAC7B,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD;AAArD;AAF3B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,OAAtC;AAA8C,gBAAA,IAAI,EAAC,SAAnD;AAA6D,gBAAA,QAAQ,EAAE;AAACH,kBAAAA,QAAQ,EAAE,UAAX;AACvEK,kBAAAA,SAAS,EAAE,oCAD4D;AACtBF,kBAAAA,SAAS,EAAC;AADY;AAAvE;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBP,eA8BO,QAAC,SAAD;AAAA,sCACK,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADL,eAEI,QAAC,OAAD,CAAS,IAAT;AAAc,gBAAA,KAAK,EAAC,QAApB;AAA6B,gBAAA,EAAE,EAAC,OAAhC;AAAwC,gBAAA,IAAI,EAAC,OAA7C;AACC,gBAAA,YAAY,EAAE,KAAKS,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBK,KADxC;AAEJ,gBAAA,SAAS,EAAC,cAFN;AAEqB,gBAAA,WAAW,EAAC,OAFjC;AAEyC,gBAAA,UAAU,EAAE;AAAC9B,kBAAAA,QAAD;AAAUM,kBAAAA;AAAV;AAFrD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,QAAtC;AAA+C,gBAAA,IAAI,EAAC,SAApD;AAA8D,gBAAA,QAAQ,EAAE;AAACN,kBAAAA,QAAQ,EAAE,UAAX;AACxEM,kBAAAA,UAAU,EAAE;AAD4D;AAAxE;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BP,eAsCO,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,QAA5B;AAAqC,cAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtCP;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAJT;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,eAsEE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKO,KAAL,CAAWE,mBAA1B;AAA+C,QAAA,MAAM,EAAE,KAAKG,mBAA5D;AAAA,gCACW,QAAC,WAAD;AAAa,UAAA,MAAM,EAAE,KAAKA,mBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADX,eAIW,QAAC,SAAD;AAAA,iCACA,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,cAAjB;AAAgC,YAAA,QAAQ,EAAGa,MAAD,IAAY;AAClD,kBAAGA,MAAM,CAACG,WAAP,KAAqBH,MAAM,CAACI,OAA/B,EAAuC;AACjC,qBAAKjB,mBAAL;AACA,qBAAKN,KAAL,CAAWwB,YAAX,CAAwB,KAAKxB,KAAL,CAAWY,IAAX,CAAgBC,QAAhB,CAAyBQ,GAAjD,EAAsD,KAAKrB,KAAL,CAAWY,IAAX,CAAgBa,IAAhB,CAAqBC,QAA3E,EACCP,MAAM,CAACG,WADR;AAEC,eAJP,MAKI;AACDK,gBAAAA,KAAK,CAAC,+CAAD,CAAL;AACH;AACS,aATb;AAAA,oCAUO,QAAC,SAAD;AAAA,sCACA,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEI,QAAC,OAAD,CAAS,QAAT;AAAkB,gBAAA,KAAK,EAAC,WAAxB;AAAoC,gBAAA,EAAE,EAAC,UAAvC;AAAkD,gBAAA,IAAI,EAAC,UAAvD;AACJ,gBAAA,SAAS,EAAC,cADN;AACqB,gBAAA,WAAW,EAAC,UADjC;AAC4C,gBAAA,UAAU,EAAE;AAACvC,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD,CAArD;AAC5DK,kBAAAA,UAAU,EAAEA,UAAU,CAAC,KAAKI,KAAL,CAAWY,IAAX,CAAgBa,IAAhB,CAAqBG,QAAtB;AADsC;AADxD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,WAAtC;AAAkD,gBAAA,IAAI,EAAC,SAAvD;AAAiE,gBAAA,QAAQ,EAAE;AAACxC,kBAAAA,QAAQ,EAAE,UAAX;AAC3EK,kBAAAA,SAAS,EAAE,oCADgE;AAC1BF,kBAAAA,SAAS,EAAC,gCADgB;AAE3EK,kBAAAA,UAAU,EAAE;AAF+D;AAA3E;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVP,eAoBO,QAAC,SAAD;AAAA,sCACA,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEI,QAAC,OAAD,CAAS,QAAT;AAAkB,gBAAA,KAAK,EAAC,cAAxB;AAAuC,gBAAA,EAAE,EAAC,aAA1C;AAAwD,gBAAA,IAAI,EAAC,aAA7D;AACJ,gBAAA,SAAS,EAAC,cADN;AACqB,gBAAA,WAAW,EAAC,cADjC;AACgD,gBAAA,UAAU,EAAE;AAACR,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD;AAArD;AAD5D;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAKA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,cAAtC;AAAqD,gBAAA,IAAI,EAAC,SAA1D;AAAoE,gBAAA,QAAQ,EAAE;AAACH,kBAAAA,QAAQ,EAAE,UAAX;AAC9EK,kBAAAA,SAAS,EAAE,oCADmE;AAC7BF,kBAAAA,SAAS,EAAC;AADmB;AAA9E;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBP,eA8BO,QAAC,SAAD;AAAA,sCACA,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEI,QAAC,OAAD,CAAS,QAAT;AAAkB,gBAAA,KAAK,EAAC,UAAxB;AAAmC,gBAAA,EAAE,EAAC,SAAtC;AAAgD,gBAAA,IAAI,EAAC,SAArD;AACJ,gBAAA,SAAS,EAAC,cADN;AAEJ,gBAAA,WAAW,EAAC,2BAFR;AAEoC,gBAAA,UAAU,EAAE;AAACH,kBAAAA,QAAD;AAAUK,kBAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAA9B;AAAkCF,kBAAAA,SAAS,EAACA,SAAS,CAAC,EAAD;AAArD;AAFhD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAMA,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,aAAlB;AAAgC,gBAAA,KAAK,EAAC,UAAtC;AAAiD,gBAAA,IAAI,EAAC,SAAtD;AAAgE,gBAAA,QAAQ,EAAE;AAACH,kBAAAA,QAAQ,EAAE,UAAX;AAC1EK,kBAAAA,SAAS,EAAE,oCAD+D;AACzBF,kBAAAA,SAAS,EAAC;AADe;AAA1E;AAAA;AAAA;AAAA;AAAA,sBANA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9BP,eAyCO,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,QAA5B;AAAqC,cAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzCP;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAJX;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AA4HH;;AA/J+B;;AAmKhC,eAAeO,OAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {Card,CardBody,CardHeader,Label,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst matchcreds = (original) => (val) =>  (val===original);\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isEditModalOpen: false,\r\n            isPasswordModalOpen: false\r\n        }\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    togglePasswordModal(){\r\n        this.setState({\r\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\r\n        });\r\n    }\r\n\r\n    toggleEditModal(){\r\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n          }\r\n      \r\n\r\nrender(){\r\n    if(this.props.auth.userinfo===null){\r\n        return (\r\n            <div className=\"row heading\">\r\n                Failed to fetch. Please reload the page\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n\r\n        <div className=\"container mt-6 home text-center align-self-center\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            \r\n            <Card className=\"heading\">\r\n                \r\n        <CardHeader><h3>My Profile</h3></CardHeader>\r\n        <CardBody>\r\n          <CardText>\r\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\r\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\r\n          <h5> {(this.props.auth.userinfo.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.auth.userinfo.roll}</h5>\r\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\r\n          </CardText>\r\n          \r\n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\r\n        {' '}\r\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\r\n\r\n        </CardBody>\r\n          </Card>\r\n            </div>\r\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit Profile\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"user\" onSubmit={(values) => {\r\n                               this.toggleEditModal();\r\n                               this.props.editUser(this.props.auth.userinfo._id, values.firstname, \r\n                                values.lastname, values.roll, values.email);     \r\n                                 }}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"firstname\">First Name</Label>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.firstname}\r\n                             placeholder=\"firstname\" \r\n                             validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"lastname\">Last Name</Label>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.lastname}\r\n                            placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"roll\">Roll No.</Label>\r\n                                <Control.text model=\".roll\" id=\"roll\" name=\"roll\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.roll}\r\n                            placeholder=\"roll\" validators={{required,minLength: minLength(3),maxLength:maxLength(12)}} />\r\n                            <Errors className=\"text-danger\" model=\".roll\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 12 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"email\">E-mail</Label>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                 defaultValue={this.props.auth.userinfo.email} \r\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\r\n                            validEmail: ' Enter a valid email'}}/>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>\r\n               \r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\r\n                     <ModalHeader toggle={this.togglePasswordModal}>\r\n                         Change Password\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\r\n                         if(values.newpassword===values.confirm){\r\n                               this.togglePasswordModal();\r\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \r\n                                values.newpassword);     \r\n                               }\r\n                        else {\r\n                            alert(\"Your passwords didn't match. Please try again\");\r\n                        }\r\n                                 }}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"password\">Current Password</Label>\r\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \r\n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\r\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\r\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\r\n                            matchcreds: ' Enter the correct password'}}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"newpassword\">New password</Label>\r\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \r\n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                            }}  />\r\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                      }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup>\r\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\r\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                                 } } />\r\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                       }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>               \r\n          </Modal>\r\n            </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}