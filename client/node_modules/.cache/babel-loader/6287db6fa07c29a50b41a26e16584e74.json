{"ast":null,"code":"import _classCallCheck from\"D:/sakshi college/cc miniproject/lib_management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/sakshi college/cc miniproject/lib_management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"D:/sakshi college/cc miniproject/lib_management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"D:/sakshi college/cc miniproject/lib_management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/sakshi college/cc miniproject/lib_management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Card,CardBody,CardHeader,Label,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup}from'reactstrap';import{Control,LocalForm,Errors}from'react-redux-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var required=function required(val){return val&&val.length;};var maxLength=function maxLength(len){return function(val){return!val||val.length<=len;};};var minLength=function minLength(len){return function(val){return val&&val.length>=len;};};var validEmail=function validEmail(val){return /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);};var matchcreds=function matchcreds(original){return function(val){return val===original;};};var Profile=/*#__PURE__*/function(_Component){_inherits(Profile,_Component);var _super=_createSuper(Profile);function Profile(props){var _this;_classCallCheck(this,Profile);_this=_super.call(this,props);_this.state={isEditModalOpen:false,isPasswordModalOpen:false};_this.toggleEditModal=_this.toggleEditModal.bind(_assertThisInitialized(_this));_this.togglePasswordModal=_this.togglePasswordModal.bind(_assertThisInitialized(_this));return _this;}_createClass(Profile,[{key:\"componentDidMount\",value:function componentDidMount(){window.scrollTo(0,0);}},{key:\"togglePasswordModal\",value:function togglePasswordModal(){this.setState({isPasswordModalOpen:!this.state.isPasswordModalOpen});}},{key:\"toggleEditModal\",value:function toggleEditModal(){this.setState({isEditModalOpen:!this.state.isEditModalOpen});}},{key:\"render\",value:function render(){var _this2=this;if(this.props.auth.userinfo===null){return/*#__PURE__*/_jsx(\"div\",{className:\"row heading\",children:\"Failed to fetch. Please reload the page\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-6 home text-center align-self-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row text-center justify-content-center\",children:/*#__PURE__*/_jsxs(Card,{className:\"heading\",children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(\"h3\",{children:\"My Profile\"})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(CardText,{children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\" First Name : \",'          '+this.props.auth.userinfo.firstname]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\" Last Name : \",'          '+this.props.auth.userinfo.lastname]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\" \",this.props.auth.userinfo.admin?'Admin Id : ':'Roll No.',\" : \",'          '+this.props.auth.userinfo.roll]}),/*#__PURE__*/_jsxs(\"h5\",{children:[\" Email : \",'          '+this.props.auth.userinfo.email]})]}),/*#__PURE__*/_jsxs(Button,{color:\"info\",onClick:this.toggleEditModal,children:[\"Edit \\xA0\",'   ',/*#__PURE__*/_jsx(\"span\",{className:\"fa fa-pencil\"})]}),' ',this.props.auth.userinfo.admin?/*#__PURE__*/_jsx(\"div\",{}):/*#__PURE__*/_jsxs(Button,{color:\"info\",onClick:this.togglePasswordModal,children:[\"Change Password \\xA0\",'   ',/*#__PURE__*/_jsx(\"span\",{className:\"fa fa-key\"})]})]})]})}),/*#__PURE__*/_jsxs(Modal,{isOpen:this.state.isEditModalOpen,toggle:this.toggleEditModal,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:this.toggleEditModal,children:\"Edit Profile\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(LocalForm,{model:\"user\",onSubmit:function onSubmit(values){_this2.toggleEditModal();_this2.props.editUser(_this2.props.auth.userinfo._id,values.firstname,values.lastname,values.roll,values.email);},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstname\",children:\"First Name\"}),/*#__PURE__*/_jsx(Control.text,{model:\".firstname\",id:\"firstname\",name:\"firstname\",className:\"form-control\",defaultValue:this.props.auth.userinfo.firstname,placeholder:\"firstname\",validators:{required:required,minLength:minLength(3),maxLength:maxLength(20)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".firstname\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 2 characters',maxLength:' Must be 20 characters or less'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"lastname\",children:\"Last Name\"}),/*#__PURE__*/_jsx(Control.text,{model:\".lastname\",id:\"lastname\",name:\"lastname\",className:\"form-control\",defaultValue:this.props.auth.userinfo.lastname,placeholder:\"lastname\",validators:{required:required,minLength:minLength(3),maxLength:maxLength(20)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".lastname\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 2 characters',maxLength:' Must be 20 characters or less'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"roll\",children:\"Roll No.\"}),/*#__PURE__*/_jsx(Control.text,{model:\".roll\",id:\"roll\",name:\"roll\",className:\"form-control\",defaultValue:this.props.auth.userinfo.roll,placeholder:\"roll\",validators:{required:required,minLength:minLength(3),maxLength:maxLength(12)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".roll\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 2 characters',maxLength:' Must be 12 characters or less'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"email\",children:\"E-mail\"}),/*#__PURE__*/_jsx(Control.text,{model:\".email\",id:\"email\",name:\"email\",defaultValue:this.props.auth.userinfo.email,className:\"form-control\",placeholder:\"email\",validators:{required:required,validEmail:validEmail}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".email\",show:\"touched\",messages:{required:'Required',validEmail:' Enter a valid email'}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",value:\"submit\",color:\"primary\",children:\"Submit\"})]})})]}),/*#__PURE__*/_jsxs(Modal,{isOpen:this.state.isPasswordModalOpen,toggle:this.togglePasswordModal,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:this.togglePasswordModal,children:\"Change Password\"}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsxs(LocalForm,{model:\"passwordform\",onSubmit:function onSubmit(values){if(values.newpassword===values.confirm){_this2.togglePasswordModal();_this2.props.editPassword(_this2.props.auth.userinfo._id,_this2.props.auth.user.username,values.newpassword);}else{alert(\"Your passwords didn't match. Please try again\");}},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"password\",children:\"Current Password\"}),/*#__PURE__*/_jsx(Control.password,{model:\".password\",id:\"password\",name:\"password\",className:\"form-control\",placeholder:\"password\",validators:{required:required,minLength:minLength(6),maxLength:maxLength(20),matchcreds:matchcreds(this.props.auth.user.password)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".password\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 5 characters',maxLength:' Must be 20 characters or less',matchcreds:' Enter the correct password'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"newpassword\",children:\"New password\"}),/*#__PURE__*/_jsx(Control.password,{model:\".newpassword\",id:\"newpassword\",name:\"newpassword\",className:\"form-control\",placeholder:\"New Password\",validators:{required:required,minLength:minLength(6),maxLength:maxLength(20)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".newpassword\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 5 characters',maxLength:' Must be 20 characters or less'}})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"confirm\",children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Control.password,{model:\".confirm\",id:\"confirm\",name:\"confirm\",className:\"form-control\",placeholder:\"Re-enter the new password\",validators:{required:required,minLength:minLength(6),maxLength:maxLength(20)}}),/*#__PURE__*/_jsx(Errors,{className:\"text-danger\",model:\".confirm\",show:\"touched\",messages:{required:'Required',minLength:' Must be greater than 5 characters',maxLength:' Must be 20 characters or less'}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",value:\"submit\",color:\"primary\",children:\"Submit\"})]})})]})]});}}]);return Profile;}(Component);export default Profile;","map":{"version":3,"sources":["D:/sakshi college/cc miniproject/lib_management/client/src/components/ProfileComponent.js"],"names":["React","Component","Card","CardBody","CardHeader","Label","CardText","Button","Modal","ModalBody","ModalHeader","FormGroup","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","validEmail","test","matchcreds","original","Profile","props","state","isEditModalOpen","isPasswordModalOpen","toggleEditModal","bind","togglePasswordModal","window","scrollTo","setState","auth","userinfo","firstname","lastname","admin","roll","email","values","editUser","_id","newpassword","confirm","editPassword","user","username","alert","password"],"mappings":"i2BAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAaC,QAAb,CAAsBC,UAAtB,CAAiCC,KAAjC,CAAuCC,QAAvC,CAAgDC,MAAhD,CAAuDC,KAAvD,CAA6DC,SAA7D,CAAuEC,WAAvE,CAAmFC,SAAnF,KAAmG,YAAnG,CACA,OAASC,OAAT,CAAkBC,SAAlB,CAA6BC,MAA7B,KAA2C,kBAA3C,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,QAASA,CAAAA,GAAG,EAAIA,GAAG,CAACC,MAApB,EAAjB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,GAAD,QAAS,UAACH,GAAD,QAAS,CAAEA,GAAF,EAAWA,GAAG,CAACC,MAAJ,EAAcE,GAAlC,EAAT,EAAlB,CACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACD,GAAD,QAAS,UAACH,GAAD,QAAUA,CAAAA,GAAD,EAAUA,GAAG,CAACC,MAAJ,EAAcE,GAAjC,EAAT,EAAlB,CACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACL,GAAD,QAAS,6CAA4CM,IAA5C,CAAiDN,GAAjD,CAAT,EAAnB,CACA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,QAAc,UAACR,GAAD,QAAWA,CAAAA,GAAG,GAAGQ,QAAjB,EAAd,EAAnB,C,GAEMC,CAAAA,O,kGAEF,iBAAYC,KAAZ,CAAkB,yCACd,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACPC,eAAe,CAAE,KADV,CAEPC,mBAAmB,CAAE,KAFd,CAAX,CAIA,MAAKC,eAAL,CAAqB,MAAKA,eAAL,CAAqBC,IAArB,+BAArB,CACA,MAAKC,mBAAL,CAAyB,MAAKA,mBAAL,CAAyBD,IAAzB,+BAAzB,CAPc,aAQjB,C,qDAED,4BAAoB,CAChBE,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,C,mCAEH,8BAAqB,CACjB,KAAKC,QAAL,CAAc,CACVN,mBAAmB,CAAE,CAAC,KAAKF,KAAL,CAAWE,mBADvB,CAAd,EAGH,C,+BAED,0BAAiB,CACT,KAAKM,QAAL,CAAc,CAACP,eAAe,CAAE,CAAC,KAAKD,KAAL,CAAWC,eAA9B,CAAd,EACD,C,sBAGX,iBAAQ,iBACJ,GAAG,KAAKF,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,GAA2B,IAA9B,CAAmC,CAC/B,mBACI,YAAK,SAAS,CAAC,aAAf,qDADJ,CAKH,CACD,mBAEI,aAAK,SAAS,CAAC,mDAAf,wBACI,YAAK,SAAS,CAAC,wCAAf,uBAEA,MAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,wBAEJ,KAAC,UAAD,wBAAY,kCAAZ,EAFI,cAGJ,MAAC,QAAD,yBACE,MAAC,QAAD,yBACA,uCAAmB,aAAa,KAAKX,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBC,SAAzD,GADA,cAEA,sCAAkB,aAAa,KAAKZ,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBE,QAAxD,GAFA,cAGA,0BAAO,KAAKb,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBG,KAA1B,CAAiC,aAAjC,CAA+C,UAArD,OAAoE,aAAa,KAAKd,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBI,IAA1G,GAHA,cAIA,kCAAc,aAAa,KAAKf,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBK,KAApD,GAJA,GADF,cAQE,MAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,OAAO,CAAE,KAAKZ,eAAnC,uBAAgE,KAAhE,cAAsE,aAAM,SAAS,CAAC,cAAhB,EAAtE,GARF,CASC,GATD,CAUP,KAAKJ,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBG,KAAzB,cAA+B,cAA/B,cAA8C,MAAC,MAAD,EAAQ,KAAK,CAAC,MAAd,CAAqB,OAAO,CAAE,KAAKR,mBAAnC,kCAA+E,KAA/E,cAAqF,aAAM,SAAS,CAAC,WAAhB,EAArF,GAVvC,GAHI,GAFA,EADJ,cAqBI,MAAC,KAAD,EAAO,MAAM,CAAE,KAAKL,KAAL,CAAWC,eAA1B,CAA2C,MAAM,CAAE,KAAKE,eAAxD,wBACS,KAAC,WAAD,EAAa,MAAM,CAAE,KAAKA,eAA1B,0BADT,cAIS,KAAC,SAAD,wBACA,MAAC,SAAD,EAAW,KAAK,CAAC,MAAjB,CAAwB,QAAQ,CAAE,kBAACa,MAAD,CAAY,CACpC,MAAI,CAACb,eAAL,GACA,MAAI,CAACJ,KAAL,CAAWkB,QAAX,CAAoB,MAAI,CAAClB,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBQ,GAA7C,CAAkDF,MAAM,CAACL,SAAzD,CACCK,MAAM,CAACJ,QADR,CACkBI,MAAM,CAACF,IADzB,CAC+BE,MAAM,CAACD,KADtC,EAEG,CAJb,wBAKO,MAAC,SAAD,yBACI,KAAC,KAAD,EAAO,OAAO,CAAC,WAAf,wBADJ,cAEI,KAAC,OAAD,CAAS,IAAT,EAAc,KAAK,CAAC,YAApB,CAAiC,EAAE,CAAC,WAApC,CAAgD,IAAI,CAAC,WAArD,CACJ,SAAS,CAAC,cADN,CACqB,YAAY,CAAE,KAAKhB,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBC,SAD5D,CAEH,WAAW,CAAC,WAFT,CAGH,UAAU,CAAE,CAACvB,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAHT,EAFJ,cAMA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,YAAtC,CAAmD,IAAI,CAAC,SAAxD,CAAkE,QAAQ,CAAE,CAACH,QAAQ,CAAE,UAAX,CAC5EK,SAAS,CAAE,oCADiE,CAC3BF,SAAS,CAAC,gCADiB,CAA5E,EANA,GALP,cAcO,MAAC,SAAD,yBACK,KAAC,KAAD,EAAO,OAAO,CAAC,UAAf,uBADL,cAEI,KAAC,OAAD,CAAS,IAAT,EAAc,KAAK,CAAC,WAApB,CAAgC,EAAE,CAAC,UAAnC,CAA8C,IAAI,CAAC,UAAnD,CACJ,SAAS,CAAC,cADN,CACsB,YAAY,CAAE,KAAKQ,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBE,QAD7D,CAEJ,WAAW,CAAC,UAFR,CAEmB,UAAU,CAAE,CAACxB,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAF/B,EAFJ,cAKA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,WAAtC,CAAkD,IAAI,CAAC,SAAvD,CAAiE,QAAQ,CAAE,CAACH,QAAQ,CAAE,UAAX,CAC3EK,SAAS,CAAE,oCADgE,CAC1BF,SAAS,CAAC,gCADgB,CAA3E,EALA,GAdP,cAsBO,MAAC,SAAD,yBACK,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,sBADL,cAEI,KAAC,OAAD,CAAS,IAAT,EAAc,KAAK,CAAC,OAApB,CAA4B,EAAE,CAAC,MAA/B,CAAsC,IAAI,CAAC,MAA3C,CACJ,SAAS,CAAC,cADN,CACsB,YAAY,CAAE,KAAKQ,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBI,IAD7D,CAEJ,WAAW,CAAC,MAFR,CAEe,UAAU,CAAE,CAAC1B,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAF3B,EAFJ,cAKA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,OAAtC,CAA8C,IAAI,CAAC,SAAnD,CAA6D,QAAQ,CAAE,CAACH,QAAQ,CAAE,UAAX,CACvEK,SAAS,CAAE,oCAD4D,CACtBF,SAAS,CAAC,gCADY,CAAvE,EALA,GAtBP,cA8BO,MAAC,SAAD,yBACK,KAAC,KAAD,EAAO,OAAO,CAAC,OAAf,oBADL,cAEI,KAAC,OAAD,CAAS,IAAT,EAAc,KAAK,CAAC,QAApB,CAA6B,EAAE,CAAC,OAAhC,CAAwC,IAAI,CAAC,OAA7C,CACC,YAAY,CAAE,KAAKQ,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBK,KADxC,CAEJ,SAAS,CAAC,cAFN,CAEqB,WAAW,CAAC,OAFjC,CAEyC,UAAU,CAAE,CAAC3B,QAAQ,CAARA,QAAD,CAAUM,UAAU,CAAVA,UAAV,CAFrD,EAFJ,cAKA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,QAAtC,CAA+C,IAAI,CAAC,SAApD,CAA8D,QAAQ,CAAE,CAACN,QAAQ,CAAE,UAAX,CACxEM,UAAU,CAAE,sBAD4D,CAAxE,EALA,GA9BP,cAsCO,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,QAA5B,CAAqC,KAAK,CAAC,SAA3C,oBAtCP,GADA,EAJT,GArBJ,cAsEE,MAAC,KAAD,EAAO,MAAM,CAAE,KAAKM,KAAL,CAAWE,mBAA1B,CAA+C,MAAM,CAAE,KAAKG,mBAA5D,wBACW,KAAC,WAAD,EAAa,MAAM,CAAE,KAAKA,mBAA1B,6BADX,cAIW,KAAC,SAAD,wBACA,MAAC,SAAD,EAAW,KAAK,CAAC,cAAjB,CAAgC,QAAQ,CAAE,kBAACW,MAAD,CAAY,CAClD,GAAGA,MAAM,CAACG,WAAP,GAAqBH,MAAM,CAACI,OAA/B,CAAuC,CACjC,MAAI,CAACf,mBAAL,GACA,MAAI,CAACN,KAAL,CAAWsB,YAAX,CAAwB,MAAI,CAACtB,KAAL,CAAWU,IAAX,CAAgBC,QAAhB,CAAyBQ,GAAjD,CAAsD,MAAI,CAACnB,KAAL,CAAWU,IAAX,CAAgBa,IAAhB,CAAqBC,QAA3E,CACCP,MAAM,CAACG,WADR,EAEC,CAJP,IAKI,CACDK,KAAK,CAAC,+CAAD,CAAL,CACH,CACS,CATb,wBAUO,MAAC,SAAD,yBACA,KAAC,KAAD,EAAO,OAAO,CAAC,UAAf,8BADA,cAEI,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAC,WAAxB,CAAoC,EAAE,CAAC,UAAvC,CAAkD,IAAI,CAAC,UAAvD,CACJ,SAAS,CAAC,cADN,CACqB,WAAW,CAAC,UADjC,CAC4C,UAAU,CAAE,CAACpC,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAC5DK,UAAU,CAAEA,UAAU,CAAC,KAAKG,KAAL,CAAWU,IAAX,CAAgBa,IAAhB,CAAqBG,QAAtB,CADsC,CADxD,EAFJ,cAKA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,WAAtC,CAAkD,IAAI,CAAC,SAAvD,CAAiE,QAAQ,CAAE,CAACrC,QAAQ,CAAE,UAAX,CAC3EK,SAAS,CAAE,oCADgE,CAC1BF,SAAS,CAAC,gCADgB,CAE3EK,UAAU,CAAE,6BAF+D,CAA3E,EALA,GAVP,cAoBO,MAAC,SAAD,yBACA,KAAC,KAAD,EAAO,OAAO,CAAC,aAAf,0BADA,cAEI,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAC,cAAxB,CAAuC,EAAE,CAAC,aAA1C,CAAwD,IAAI,CAAC,aAA7D,CACJ,SAAS,CAAC,cADN,CACqB,WAAW,CAAC,cADjC,CACgD,UAAU,CAAE,CAACR,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAD5D,EAFJ,cAKA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,cAAtC,CAAqD,IAAI,CAAC,SAA1D,CAAoE,QAAQ,CAAE,CAACH,QAAQ,CAAE,UAAX,CAC9EK,SAAS,CAAE,oCADmE,CAC7BF,SAAS,CAAC,gCADmB,CAA9E,EALA,GApBP,cA8BO,MAAC,SAAD,yBACA,KAAC,KAAD,EAAO,OAAO,CAAC,SAAf,8BADA,cAEI,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAC,UAAxB,CAAmC,EAAE,CAAC,SAAtC,CAAgD,IAAI,CAAC,SAArD,CACJ,SAAS,CAAC,cADN,CAEJ,WAAW,CAAC,2BAFR,CAEoC,UAAU,CAAE,CAACH,QAAQ,CAARA,QAAD,CAAUK,SAAS,CAAEA,SAAS,CAAC,CAAD,CAA9B,CAAkCF,SAAS,CAACA,SAAS,CAAC,EAAD,CAArD,CAFhD,EAFJ,cAMA,KAAC,MAAD,EAAQ,SAAS,CAAC,aAAlB,CAAgC,KAAK,CAAC,UAAtC,CAAiD,IAAI,CAAC,SAAtD,CAAgE,QAAQ,CAAE,CAACH,QAAQ,CAAE,UAAX,CAC1EK,SAAS,CAAE,oCAD+D,CACzBF,SAAS,CAAC,gCADe,CAA1E,EANA,GA9BP,cAyCO,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,KAAK,CAAC,QAA5B,CAAqC,KAAK,CAAC,SAA3C,oBAzCP,GADA,EAJX,GAtEF,GAFJ,CA4HH,C,qBA/JqBjB,S,EAmKtB,cAAewB,CAAAA,OAAf","sourcesContent":["import React,{Component} from 'react';\r\nimport {Card,CardBody,CardHeader,Label,CardText,Button,Modal,ModalBody,ModalHeader,FormGroup} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst matchcreds = (original) => (val) =>  (val===original);\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isEditModalOpen: false,\r\n            isPasswordModalOpen: false\r\n        }\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.togglePasswordModal=this.togglePasswordModal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n\r\n    togglePasswordModal(){\r\n        this.setState({\r\n            isPasswordModalOpen: !this.state.isPasswordModalOpen\r\n        });\r\n    }\r\n\r\n    toggleEditModal(){\r\n            this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n          }\r\n      \r\n\r\nrender(){\r\n    if(this.props.auth.userinfo===null){\r\n        return (\r\n            <div className=\"row heading\">\r\n                Failed to fetch. Please reload the page\r\n            </div>\r\n        )\r\n    }\r\n    return(\r\n\r\n        <div className=\"container mt-6 home text-center align-self-center\">\r\n            <div className=\"row text-center justify-content-center\">\r\n            \r\n            <Card className=\"heading\">\r\n                \r\n        <CardHeader><h3>My Profile</h3></CardHeader>\r\n        <CardBody>\r\n          <CardText>\r\n          <h5> First Name : {'          '+this.props.auth.userinfo.firstname}</h5>\r\n          <h5> Last Name : {'          '+this.props.auth.userinfo.lastname}</h5>\r\n          <h5> {(this.props.auth.userinfo.admin)?'Admin Id : ':'Roll No.'} : {'          '+this.props.auth.userinfo.roll}</h5>\r\n          <h5> Email : {'          '+this.props.auth.userinfo.email}</h5>\r\n          </CardText>\r\n          \r\n          <Button color=\"info\" onClick={this.toggleEditModal}>Edit &nbsp;{'   '}<span className=\"fa fa-pencil\"/></Button>\r\n        {' '}\r\n{this.props.auth.userinfo.admin?<div/>:        <Button color=\"info\" onClick={this.togglePasswordModal}>Change Password &nbsp;{'   '}<span className=\"fa fa-key\"/></Button>}\r\n\r\n        </CardBody>\r\n          </Card>\r\n            </div>\r\n            <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit Profile\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"user\" onSubmit={(values) => {\r\n                               this.toggleEditModal();\r\n                               this.props.editUser(this.props.auth.userinfo._id, values.firstname, \r\n                                values.lastname, values.roll, values.email);     \r\n                                 }}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"firstname\">First Name</Label>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                            className=\"form-control\" defaultValue={this.props.auth.userinfo.firstname}\r\n                             placeholder=\"firstname\" \r\n                             validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"lastname\">Last Name</Label>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.lastname}\r\n                            placeholder=\"lastname\" validators={{required,minLength: minLength(3),maxLength:maxLength(20)}} />\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 20 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"roll\">Roll No.</Label>\r\n                                <Control.text model=\".roll\" id=\"roll\" name=\"roll\" \r\n                            className=\"form-control\"  defaultValue={this.props.auth.userinfo.roll}\r\n                            placeholder=\"roll\" validators={{required,minLength: minLength(3),maxLength:maxLength(12)}} />\r\n                            <Errors className=\"text-danger\" model=\".roll\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 2 characters', maxLength:' Must be 12 characters or less'}}/>\r\n                            </FormGroup>\r\n                            <FormGroup>    \r\n                                 <Label htmlFor=\"email\">E-mail</Label>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                 defaultValue={this.props.auth.userinfo.email} \r\n                            className=\"form-control\" placeholder=\"email\" validators={{required,validEmail}} />\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{required: 'Required',\r\n                            validEmail: ' Enter a valid email'}}/>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>\r\n               \r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.isPasswordModalOpen} toggle={this.togglePasswordModal}>\r\n                     <ModalHeader toggle={this.togglePasswordModal}>\r\n                         Change Password\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                     <LocalForm model=\"passwordform\" onSubmit={(values) => {\r\n                         if(values.newpassword===values.confirm){\r\n                               this.togglePasswordModal();\r\n                               this.props.editPassword(this.props.auth.userinfo._id, this.props.auth.user.username, \r\n                                values.newpassword);     \r\n                               }\r\n                        else {\r\n                            alert(\"Your passwords didn't match. Please try again\");\r\n                        }\r\n                                 }}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"password\">Current Password</Label>\r\n                                <Control.password model=\".password\" id=\"password\" name=\"password\" \r\n                            className=\"form-control\" placeholder=\"password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20),\r\n                            matchcreds: matchcreds(this.props.auth.user.password)}} />\r\n                            <Errors className=\"text-danger\" model=\".password\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less',\r\n                            matchcreds: ' Enter the correct password'}}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"newpassword\">New password</Label>\r\n                                <Control.password model=\".newpassword\" id=\"newpassword\" name=\"newpassword\" \r\n                            className=\"form-control\" placeholder=\"New Password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                            }}  />\r\n                            <Errors className=\"text-danger\" model=\".newpassword\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                      }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup>\r\n                            <Label htmlFor=\"confirm\">Confirm Password</Label>\r\n                                <Control.password model=\".confirm\" id=\"confirm\" name=\"confirm\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Re-enter the new password\" validators={{required,minLength: minLength(6),maxLength:maxLength(20)\r\n                                 } } />\r\n                            <Errors className=\"text-danger\" model=\".confirm\" show=\"touched\" messages={{required: 'Required',\r\n                            minLength: ' Must be greater than 5 characters', maxLength:' Must be 20 characters or less'\r\n                       }}/>\r\n                            </FormGroup>\r\n                            \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\" >Submit</Button>\r\n                        </LocalForm>\r\n                     </ModalBody>               \r\n          </Modal>\r\n            </div>\r\n        );\r\n}\r\n\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}