{"ast":null,"code":"var _jsxFileName = \"D:\\\\sakshi college\\\\cc miniproject\\\\lib_management\\\\client\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from 'react';\nimport Header from './HeaderComponent.js';\nimport Footer from './FooterComponent.js';\nimport Home from './HomeComponent.js';\nimport Booklist from './BooksComponent.js';\nimport Search from './SearchComponent.js';\nimport BookDetail from './BookDetailComponent.js';\nimport Profile from './ProfileComponent.js';\nimport AddBook from './AddBookComponent.js';\nimport History from './HistoryComponent.js';\nimport Issue from './IssueComponent.js';\nimport Return from './ReturnComponent.js';\nimport UserDetail from './UserDetailComponent.js';\nimport Stats from './StatsComponent.js';\nimport Log from './LogComponent.js';\nimport UserList from './UserListComponent.js';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Modal, ModalBody, ModalHeader, Button, Label, Col, Row } from 'reactstrap';\nimport { postBook, fetchBooks, editBook, deleteBook, loginUser, logoutUser, registerUser, editUser, editPassword, postIssue, returnIssue, fetchIssues, fetchUsers } from '../redux/ActionCreators';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = val => val && val.length;\n\nconst requiredNum = val => !!val;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nconst maxVal = len => val => !val || val <= len;\n\nconst minVal = len => val => val && val >= len;\n\nconst isNumber = val => !isNaN(Number(val));\n\nconst mapStateToProps = state => {\n  return {\n    books: state.books,\n    auth: state.auth,\n    issues: state.issues,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchBooks: () => {\n    dispatch(fetchBooks());\n  },\n  fetchIssues: student => {\n    dispatch(fetchIssues(student));\n  },\n  fetchUsers: () => {\n    dispatch(fetchUsers());\n  },\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\n  deleteBook: _id => dispatch(deleteBook(_id)),\n  loginUser: creds => dispatch(loginUser(creds)),\n  logoutUser: () => dispatch(logoutUser()),\n  registerUser: creds => dispatch(registerUser(creds)),\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\n  editPassword: (_id, username, password) => dispatch(editPassword(_id, username, password)),\n  postIssue: (bookId, studentId) => dispatch(postIssue(bookId, studentId)),\n  returnIssue: issueId => dispatch(returnIssue(issueId))\n});\n\nclass Main extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n\n    if (this.props.auth.isAuthenticated) {\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\n    }\n\n    if (this.props.auth.isAuthenticated && this.props.auth.userinfo.admin) {\n      this.props.fetchUsers();\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDeleteModalOpen: false,\n      isEditModalOpen: false,\n      selectedBook: null\n    };\n    this.toggleDeleteModal = this.toggleDeleteModal.bind(this);\n    this.toggleEditModal = this.toggleEditModal.bind(this);\n    this.changeSelected = this.changeSelected.bind(this);\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\n  }\n\n  handleSubmitEdit(values) {\n    this.toggleEditModal();\n    this.props.editBook(this.state.selectedBook._id, values.name, values.author, values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);\n  }\n\n  changeSelected(_id) {\n    this.setState({\n      selectedBook: this.props.books.books.filter(book => book._id === _id)[0]\n    });\n  }\n\n  toggleDeleteModal() {\n    this.setState({\n      isDeleteModalOpen: !this.state.isDeleteModalOpen\n    });\n  }\n\n  toggleEditModal() {\n    this.setState({\n      isEditModalOpen: !this.state.isEditModalOpen\n    });\n  }\n\n  render() {\n    const BookWithId = ({\n      match\n    }) => {\n      let selectedBook = this.props.books.books.filter(book => book._id === match.params.bookId)[0];\n      let notFoundErr = null;\n\n      if (selectedBook === undefined) {\n        notFoundErr = \"\\n\\n Error 404 :  Book not found\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(BookDetail, {\n        book: selectedBook,\n        isLoading: this.props.books.isLoading,\n        errMess: this.props.books.errMess || notFoundErr,\n        toggleEditModal: this.toggleEditModal,\n        changeSelected: this.changeSelected,\n        isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this);\n    };\n\n    const UserWithId = ({\n      match\n    }) => {\n      let selectedUser = this.props.users.users.filter(user => user._id === match.params.userId)[0];\n      let notFoundErr = null;\n\n      if (selectedUser === undefined) {\n        notFoundErr = \"\\n\\n Error 404 :  User not found\";\n      }\n\n      return /*#__PURE__*/_jsxDEV(UserDetail, {\n        user: selectedUser,\n        isLoading: this.props.users.isLoading,\n        errMess: this.props.users.errMess || notFoundErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this);\n    };\n\n    const PrivateRouteCommon = ({\n      component: Component,\n      ...rest\n    }) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => this.props.auth.isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/home',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this);\n\n    const PrivateRouteAdmin = ({\n      component: Component,\n      ...rest\n    }) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => this.props.auth.isAuthenticated && this.props.auth.userinfo.admin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/home',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this);\n\n    const PrivateRoute = ({\n      component: Component,\n      ...rest\n    }) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => this.props.auth.isAuthenticated && !this.props.auth.userinfo.admin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/home',\n          state: {\n            from: props.location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this);\n\n    let uniqueIsbn = defaultIsbn => val => !this.props.books.books.some(book => book.isbn === val) || val === defaultIsbn;\n\n    let uniqueName = defaultName => val => !this.props.books.books.some(book => book.name === val) || val === defaultName;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        auth: this.props.auth,\n        loginUser: this.props.loginUser,\n        logoutUser: this.props.logoutUser,\n        registerUser: this.props.registerUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        location: this.props.location,\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          component: () => /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search\",\n          component: () => /*#__PURE__*/_jsxDEV(Search, {\n            books: this.props.books.books,\n            booksLoading: this.props.books.isLoading,\n            booksErrMess: this.props.books.errMess,\n            isSignedIn: this.props.auth.isAuthenticated,\n            isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n            toggleEditModal: this.toggleEditModal,\n            toggleDeleteModal: this.toggleDeleteModal,\n            changeSelected: this.changeSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/books\",\n          component: () => /*#__PURE__*/_jsxDEV(Booklist, {\n            books: this.props.books.books,\n            booksLoading: this.props.books.isLoading,\n            booksErrMess: this.props.books.errMess,\n            isSignedIn: this.props.auth.isAuthenticated,\n            isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n            auth: this.props.auth,\n            toggleEditModal: this.toggleEditModal,\n            toggleDeleteModal: this.toggleDeleteModal,\n            changeSelected: this.changeSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/books/:bookId\",\n          component: BookWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteCommon, {\n          exact: true,\n          path: \"/profile\",\n          component: () => /*#__PURE__*/_jsxDEV(Profile, {\n            auth: this.props.auth,\n            editUser: this.props.editUser,\n            editPassword: this.props.editPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/add_book\",\n          component: () => /*#__PURE__*/_jsxDEV(AddBook, {\n            isAdmin: this.props.auth.userinfo == null ? false : this.props.auth.userinfo.admin,\n            postBook: this.props.postBook,\n            books: this.props.books.books,\n            booksLoading: this.props.books.isLoading,\n            booksErrMess: this.props.books.errMess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/profile\",\n          component: () => /*#__PURE__*/_jsxDEV(Profile, {\n            auth: this.props.auth,\n            editUser: this.props.editUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/history\",\n          component: () => /*#__PURE__*/_jsxDEV(History, {\n            issues: this.props.issues,\n            auth: this.props.auth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/logs\",\n          component: () => /*#__PURE__*/_jsxDEV(Log, {\n            issues: this.props.issues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/list_students\",\n          component: () => /*#__PURE__*/_jsxDEV(UserList, {\n            users: this.props.users.users.filter(user => !user.admin),\n            usersLoading: this.props.users.isLoading,\n            usersErrMess: this.props.users.errMess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 90\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/list_admins\",\n          component: () => /*#__PURE__*/_jsxDEV(UserList, {\n            users: this.props.users.users.filter(user => user.admin),\n            usersLoading: this.props.users.isLoading,\n            usersErrMess: this.props.users.errMess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 88\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/issue\",\n          component: () => /*#__PURE__*/_jsxDEV(Issue, {\n            auth: this.props.auth,\n            books: this.props.books.books,\n            booksLoading: this.props.books.isLoading,\n            booksErrMess: this.props.books.errMess,\n            users: this.props.users.users,\n            usersLoading: this.props.users.isLoading,\n            usersErrMess: this.props.users.errMess,\n            postIssue: this.props.postIssue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          exact: true,\n          path: \"/return\",\n          component: () => /*#__PURE__*/_jsxDEV(Return, {\n            issues: this.props.issues,\n            auth: this.props.auth,\n            returnIssue: this.props.returnIssue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          path: \"/users/:userId\",\n          component: UserWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRouteAdmin, {\n          path: \"/stats\",\n          component: () => /*#__PURE__*/_jsxDEV(Stats, {\n            issues: this.props.issues,\n            books: this.props.books.books,\n            booksLoading: this.props.books.isLoading,\n            booksErrMess: this.props.books.errMess,\n            users: this.props.users.users,\n            usersLoading: this.props.users.isLoading,\n            usersErrMess: this.props.users.errMess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isDeleteModalOpen,\n        toggle: this.toggleDeleteModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleDeleteModal,\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [\"Book details : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 44\n          }, this), \"Name : \", this.state.selectedBook ? this.state.selectedBook.name : '', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 90\n          }, this), \"Authors : \", this.state.selectedBook ? this.state.selectedBook.author : '', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 95\n          }, this), \"ISBN Number : \", this.state.selectedBook ? this.state.selectedBook.isbn : '', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 97\n          }, this), \"Available Copies : \", this.state.selectedBook ? this.state.selectedBook.copies : '', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 104\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 110\n          }, this), \"Are you sure you wish to delete this book ? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 69\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: () => {\n              this.props.deleteBook(this.state.selectedBook._id);\n              this.toggleDeleteModal();\n            },\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 10\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"warning\",\n            onClick: () => {\n              this.toggleDeleteModal();\n            },\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), this.state.selectedBook ? /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.isEditModalOpen,\n        toggle: this.toggleEditModal,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: this.toggleEditModal,\n          children: \"Edit a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(LocalForm, {\n            onSubmit: values => this.handleSubmitEdit(values),\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                md: 2,\n                children: \"Name \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".name\",\n                  id: \"name\",\n                  name: \"name\",\n                  defaultValue: this.state.selectedBook.name,\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(3),\n                    uniqueName: uniqueName(this.state.selectedBook.name)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".name\",\n                  show: \"touched\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be greater than 2 characters',\n                    uniqueName: ' There exists a book with this name already'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"author\",\n                md: 2,\n                children: \"Authors \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".author\",\n                  id: \"author\",\n                  name: \"author\",\n                  defaultValue: this.state.selectedBook.author,\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(3)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".author\",\n                  show: \"touched\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be greater than 2 characters'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"isbn\",\n                md: 4,\n                children: \"ISBN No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".isbn\",\n                  id: \"isbn\",\n                  name: \"isbn\",\n                  defaultValue: this.state.selectedBook.isbn,\n                  className: \"form-control\",\n                  validators: {\n                    required,\n                    minLength: minLength(10),\n                    maxLength: maxLength(13),\n                    isNumber,\n                    uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".isbn\",\n                  show: \"touched\",\n                  messages: {\n                    required: 'Required',\n                    minLength: 'Must be greater than 9 numbers',\n                    maxLength: 'Must be 13 numbers or less',\n                    isNumber: 'Must be a number',\n                    uniqueIsbn: ' There exists a book with this ISBN No.'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"cat\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Control.select, {\n                  model: \".cat\",\n                  id: \"cat\",\n                  className: \"form-control\",\n                  defaultValue: this.state.selectedBook.cat,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Romance\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Technology\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 56\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Computer Science\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Management\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Electronics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Physics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 60\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Chemistry\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Mathematics\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 58\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Fiction\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Philosophy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 56\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Language\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Arts\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Other\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"copies\",\n                md: 6,\n                children: \" Copies Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".copies\",\n                  id: \"copies\",\n                  name: \"copies\",\n                  defaultValue: this.state.selectedBook.copies,\n                  className: \"form-control\",\n                  validators: {\n                    requiredNum,\n                    minVal: minVal(1),\n                    maxVal: maxVal(1000),\n                    isNumber\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".copies\",\n                  messages: {\n                    requiredNum: 'Required',\n                    minVal: 'Must be greater than 0',\n                    maxVal: 'Must be 1000 or less',\n                    isNumber: 'Must be a number'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"floor\",\n                  children: \"Floor \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Control.select, {\n                  model: \".floor\",\n                  id: \"floor\",\n                  className: \"form-control\",\n                  defaultValue: this.state.selectedBook.floor,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 31\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"shelf\",\n                md: 6,\n                children: \" Shelf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                children: [/*#__PURE__*/_jsxDEV(Control.text, {\n                  model: \".shelf\",\n                  id: \"shelf\",\n                  name: \"shelf\",\n                  defaultValue: this.state.selectedBook.shelf,\n                  className: \"form-control\",\n                  validators: {\n                    requiredNum,\n                    minVal: minVal(1),\n                    maxVal: maxVal(100),\n                    isNumber\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Errors, {\n                  className: \"text-danger\",\n                  model: \".shelf\",\n                  messages: {\n                    requiredNum: 'Required',\n                    minVal: 'Must be greater than 0',\n                    maxVal: 'Must be 100 or less',\n                    isNumber: 'Must be a number'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"description\",\n                md: 2,\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 10,\n                children: /*#__PURE__*/_jsxDEV(Control.textarea, {\n                  model: \".description\",\n                  id: \"description\",\n                  name: \"description\",\n                  rows: \"12\",\n                  defaultValue: this.state.selectedBook.description,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"ml-auto mr-auto\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  className: \"bg-primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["D:/sakshi college/cc miniproject/lib_management/client/src/components/MainComponent.js"],"names":["React","Component","Header","Footer","Home","Booklist","Search","BookDetail","Profile","AddBook","History","Issue","Return","UserDetail","Stats","Log","UserList","Switch","Route","Redirect","withRouter","connect","Modal","ModalBody","ModalHeader","Button","Label","Col","Row","postBook","fetchBooks","editBook","deleteBook","loginUser","logoutUser","registerUser","editUser","editPassword","postIssue","returnIssue","fetchIssues","fetchUsers","Control","LocalForm","Errors","required","val","length","requiredNum","maxLength","len","minLength","maxVal","minVal","isNumber","isNaN","Number","mapStateToProps","state","books","auth","issues","users","mapDispatchToProps","dispatch","student","name","author","description","isbn","cat","floor","shelf","copies","_id","creds","firstname","lastname","roll","email","username","password","bookId","studentId","issueId","Main","componentDidMount","props","isAuthenticated","userinfo","admin","constructor","isDeleteModalOpen","isEditModalOpen","selectedBook","toggleDeleteModal","bind","toggleEditModal","changeSelected","handleSubmitEdit","values","setState","filter","book","render","BookWithId","match","params","notFoundErr","undefined","isLoading","errMess","UserWithId","selectedUser","user","userId","PrivateRouteCommon","component","rest","pathname","from","location","PrivateRouteAdmin","PrivateRoute","uniqueIsbn","defaultIsbn","some","uniqueName","defaultName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Header from './HeaderComponent.js';\r\nimport Footer from './FooterComponent.js';\r\nimport Home from './HomeComponent.js';\r\nimport Booklist from './BooksComponent.js';\r\nimport Search from './SearchComponent.js';\r\nimport BookDetail from './BookDetailComponent.js';\r\nimport Profile from './ProfileComponent.js';\r\nimport AddBook from './AddBookComponent.js';\r\nimport History from './HistoryComponent.js';\r\nimport Issue from './IssueComponent.js';\r\nimport Return from './ReturnComponent.js';\r\nimport UserDetail from './UserDetailComponent.js';\r\nimport Stats from './StatsComponent.js';\r\nimport Log from './LogComponent.js';\r\nimport UserList from './UserListComponent.js';\r\n\r\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Modal,ModalBody,ModalHeader,Button, Label, Col, Row} from 'reactstrap';\r\nimport { postBook, fetchBooks, editBook, deleteBook,loginUser, logoutUser, \r\n  registerUser, editUser, editPassword, postIssue, returnIssue, fetchIssues, fetchUsers} from '../redux/ActionCreators';\r\nimport { Control, LocalForm, Errors  } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst requiredNum = (val) => !!(val);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxVal = (len) => (val) => !(val) || (val<= len);\r\nconst minVal = (len) => (val) => (val) && (val>= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nconst mapStateToProps= (state)=>{\r\n  return{\r\n    books: state.books,\r\n    auth: state.auth,\r\n    issues: state.issues,\r\n    users: state.users\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchBooks: () => { dispatch(fetchBooks())},\r\n  fetchIssues: (student) =>{ dispatch(fetchIssues(student))},\r\n  fetchUsers: () => { dispatch(fetchUsers())},\r\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) => dispatch(postBook(name, author, description, isbn, cat, floor, shelf, copies)),\r\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch(editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)),\r\n  deleteBook: (_id) =>  dispatch(deleteBook(_id)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  registerUser: (creds) => dispatch(registerUser(creds)),\r\n  editUser: (_id, firstname, lastname, roll, email) => dispatch(editUser(_id, firstname, lastname, roll, email)),\r\n  editPassword : (_id,username,password) => dispatch(editPassword(_id,username,password)),\r\n  postIssue: (bookId,studentId) => (dispatch(postIssue(bookId,studentId))),\r\n  returnIssue: (issueId) => (dispatch(returnIssue(issueId)))\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n    if(this.props.auth.isAuthenticated){\r\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\r\n    }\r\n    if(this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin){\r\n      this.props.fetchUsers();\r\n    }\r\n  }\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n          isDeleteModalOpen: false,\r\n          isEditModalOpen: false,\r\n          selectedBook: null\r\n        };\r\n        this.toggleDeleteModal=this.toggleDeleteModal.bind(this);\r\n        this.toggleEditModal=this.toggleEditModal.bind(this);\r\n        this.changeSelected=this.changeSelected.bind(this);\r\n        this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n      }\r\n    \r\n      handleSubmitEdit(values) {\r\n        this.toggleEditModal();\r\n        this.props.editBook(this.state.selectedBook._id, values.name, values.author,\r\n          values.description, values.isbn, values.cat, values.floor, values.shelf, values.copies);     \r\n        }\r\n    \r\n    changeSelected(_id){\r\n      this.setState({selectedBook:this.props.books.books.filter((book)=>(book._id===_id))[0]});\r\n    }\r\n\r\n    toggleDeleteModal(){\r\n      this.setState({isDeleteModalOpen: !this.state.isDeleteModalOpen})\r\n    }\r\n    \r\n    toggleEditModal(){\r\n      this.setState({isEditModalOpen: !this.state.isEditModalOpen});\r\n    }\r\n\r\n    render(){\r\n      const BookWithId = ({match}) => {\r\n      let selectedBook=this.props.books.books.filter((book) => (book._id)===(match.params.bookId))[0]\r\n      let notFoundErr=null;\r\n      if(selectedBook===undefined){\r\n      notFoundErr=(\"\\n\\n Error 404 :  Book not found\");\r\n      }  \r\n      return(\r\n          <BookDetail book={selectedBook}\r\n          isLoading={this.props.books.isLoading}\r\n          errMess={this.props.books.errMess||notFoundErr}\r\n          toggleEditModal={this.toggleEditModal}\r\n          changeSelected={this.changeSelected}\r\n          isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n          />\r\n          );\r\n      };\r\n    \r\n      const UserWithId = ({match}) => {\r\n        let selectedUser=this.props.users.users.filter((user) => ((user._id)===(match.params.userId)))[0];\r\n        let notFoundErr=null;\r\n        if(selectedUser===undefined){\r\n        notFoundErr=(\"\\n\\n Error 404 :  User not found\");\r\n        }  \r\n        return(\r\n            <UserDetail user={selectedUser}\r\n            isLoading={this.props.users.isLoading}\r\n            errMess={this.props.users.errMess||notFoundErr}\r\n            />\r\n            );\r\n        };\r\n   \r\n      const PrivateRouteCommon = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      const PrivateRoute = ({ component: Component, ...rest }) => (\r\n        <Route {...rest} render={(props) => (\r\n          this.props.auth.isAuthenticated&&!this.props.auth.userinfo.admin\r\n            ? <Component {...props} />\r\n            : <Redirect to={{\r\n                pathname: '/home',\r\n                state: { from: props.location }\r\n              }} />\r\n        )} />\r\n      );\r\n\r\n      let uniqueIsbn= (defaultIsbn)=> (val) =>(!this.props.books.books.some((book)=>(book.isbn===val))||(val===defaultIsbn))\r\n      let uniqueName= (defaultName)=>(val) =>(!this.props.books.books.some((book)=>(book.name===val))||(val===defaultName))\r\n\r\n    return ( \r\n          <div className=\"App\">\r\n          <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser} \r\n          logoutUser={this.props.logoutUser}\r\n          registerUser={this.props.registerUser}\r\n          />\r\n          <Switch location={this.props.location}>\r\n                      <Route exact path='/home' component={() => <Home />} />\r\n                      <Route exact path='/search' component={() => <Search \r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}\r\n                />}\r\n                />\r\n\r\n                      <Route exact path='/books' component={() => <Booklist\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      isSignedIn={this.props.auth.isAuthenticated}\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      auth={this.props.auth}\r\n                      toggleEditModal={this.toggleEditModal}\r\n                      toggleDeleteModal={this.toggleDeleteModal}\r\n                      changeSelected={this.changeSelected}/>}/>\r\n                      <Route path='/books/:bookId' component={BookWithId} />\r\n                      <PrivateRouteCommon exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} \r\n                      editPassword={this.props.editPassword}/>\r\n                      }\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/add_book' component={() => <AddBook\r\n                      isAdmin={(this.props.auth.userinfo==null)?false:(this.props.auth.userinfo.admin)}\r\n                      postBook={this.props.postBook}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      />\r\n                      }/>\r\n                      <PrivateRoute exact path='/profile' component={() => <Profile\r\n                      auth={this.props.auth}\r\n                      editUser={this.props.editUser} />}\r\n                      />\r\n                       <PrivateRoute exact path='/history' component={() => <History\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/logs' component={() => <Log\r\n                      issues={this.props.issues}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_students' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(!user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                         <PrivateRouteAdmin exact path='/list_admins' component={() => <UserList\r\n                      users={this.props.users.users.filter((user)=>(user.admin))}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}\r\n                      />\r\n                       <PrivateRouteAdmin exact path='/issue' component={() => <Issue\r\n                      auth={this.props.auth}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                      postIssue={this.props.postIssue}\r\n                       />} />\r\n                      <PrivateRouteAdmin exact path='/return' component={() => <Return\r\n                      issues={this.props.issues}\r\n                      auth={this.props.auth}\r\n                      returnIssue={this.props.returnIssue}\r\n                     />} />\r\n                      <PrivateRouteAdmin path='/users/:userId' component={UserWithId}/>\r\n                      <PrivateRouteAdmin path='/stats' component={() => <Stats\r\n                      issues={this.props.issues}\r\n                      books={this.props.books.books}\r\n                      booksLoading={this.props.books.isLoading}\r\n                      booksErrMess={this.props.books.errMess}\r\n                      users={this.props.users.users}\r\n                      usersLoading={this.props.users.isLoading}\r\n                      usersErrMess={this.props.users.errMess}\r\n                     />}/>\r\n                      <Redirect to=\"/home\"/>\r\n          </Switch>\r\n        <Footer/>\r\n        <Modal isOpen={this.state.isDeleteModalOpen} toggle={this.toggleDeleteModal}>\r\n                     <ModalHeader toggle={this.toggleDeleteModal}>\r\n                         Confirm Deletion\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                       Book details : <br/><br/>\r\n                        Name : {this.state.selectedBook?this.state.selectedBook.name:''} <br/>\r\n                        Authors : {this.state.selectedBook?this.state.selectedBook.author:''} <br/>\r\n                        ISBN Number : {this.state.selectedBook?this.state.selectedBook.isbn:''} <br/>\r\n                        Available Copies : {this.state.selectedBook?this.state.selectedBook.copies:''} <br/> <br/>\r\n                        Are you sure you wish to delete this book ? <br/><br/>\r\n         <Button color=\"danger\" onClick={()=>{\r\n           this.props.deleteBook(this.state.selectedBook._id);\r\n           this.toggleDeleteModal();}}>Yes</Button>{' '}  \r\n         <Button color=\"warning\" onClick={()=>{\r\n           this.toggleDeleteModal();\r\n         }}>No</Button>\r\n                     </ModalBody>\r\n          </Modal>\r\n          {this.state.selectedBook?(\r\n                 <Modal isOpen={this.state.isEditModalOpen} toggle={this.toggleEditModal}>\r\n                     <ModalHeader toggle={this.toggleEditModal}>\r\n                         Edit a book\r\n                     </ModalHeader>\r\n                     <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={2}>Name </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        defaultValue={this.state.selectedBook.name}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3),\r\n                                            uniqueName: uniqueName(this.state.selectedBook.name)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            uniqueName: ' There exists a book with this name already'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>                    \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={2}>Authors </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        defaultValue={this.state.selectedBook.author}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"isbn\" md={4}>ISBN No.</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".isbn\" id=\"isbn\" name=\"isbn\"\r\n                                        defaultValue={this.state.selectedBook.isbn}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(10), maxLength: maxLength(13), isNumber,\r\n                                            uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".isbn\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 9 numbers',\r\n                                            maxLength: 'Must be 13 numbers or less',\r\n                                            isNumber: 'Must be a number',\r\n                                            uniqueIsbn: ' There exists a book with this ISBN No.'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                                        \r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"cat\">Category</Label>\r\n                            <Control.select model=\".cat\" id=\"cat\" className=\"form-control\" defaultValue={this.state.selectedBook.cat}>\r\n                              <option>Romance</option> <option>Technology</option>\r\n                              <option>Computer Science</option> <option>Management</option>\r\n                              <option>Electronics</option> <option>Physics</option>\r\n                              <option>Chemistry</option> <option>Mathematics</option>\r\n                              <option>Fiction</option> <option>Philosophy</option>\r\n                              <option>Language</option> <option>Arts</option>\r\n                              <option>Other</option> \r\n\r\n                                                          </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"copies\" md={6}> Copies Available</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".copies\" id=\"copies\" name=\"copies\"\r\n                                        defaultValue={this.state.selectedBook.copies}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(1000), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".copies\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 1000 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                            <Label htmlFor=\"floor\">Floor </Label>\r\n                            <Control.select model=\".floor\" id=\"floor\" className=\"form-control\" defaultValue={this.state.selectedBook.floor}>\r\n                              <option>0</option> <option>1</option>\r\n                              <option>2</option> <option>3</option>\r\n                              <option>4</option> <option>5</option>\r\n                              <option>6</option> <option>7</option>\r\n                              <option>8</option> \r\n                            </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"shelf\" md={6}> Shelf</Label>\r\n                                <Col md={6}>\r\n                                    <Control.text model=\".shelf\" id=\"shelf\" name=\"shelf\"\r\n                                        defaultValue={this.state.selectedBook.shelf}\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            requiredNum, minVal: minVal(1), maxVal: maxVal(100), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".shelf\"\r\n                                        messages={{\r\n                                            requiredNum: 'Required',\r\n                                            minVal: 'Must be greater than 0',\r\n                                            maxVal: 'Must be 100 or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                     \r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"description\" md={2}>Description</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".description\" id=\"description\" name=\"description\"\r\n                                        rows=\"12\"\r\n                                        defaultValue={this.state.selectedBook.description}\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                          <Row>\r\n                          <Col className=\"ml-auto mr-auto\">\r\n                        <Button type=\"submit\" className=\"bg-primary\">\r\n                            Submit\r\n                        </Button>\r\n                        </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n               \r\n          </Modal>):(<React.Fragment/>)}\r\n\r\n          </div>\r\n           );     \r\n    }\r\n    }\r\n\r\n    export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n\r\n"]},"metadata":{},"sourceType":"module"}