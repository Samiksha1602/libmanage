{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../baseUrl';\nexport const addBook = book => ({\n  type: ActionTypes.ADD_BOOK,\n  payload: book\n});\nexport const postBook = (name, author, description, isbn, cat, floor, shelf, copies) => dispatch => {\n  const newBook = {\n    name: name,\n    author: author,\n    description: description,\n    isbn: isbn,\n    cat: cat,\n    floor: floor,\n    shelf: shelf,\n    copies: copies\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'books', {\n    method: \"POST\",\n    body: JSON.stringify(newBook),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    } //   ,        credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    alert('Book added successfully');\n    return dispatch(addBook(response));\n  }).catch(error => {\n    alert('Your book could not be added\\nError: ' + error.message);\n  });\n};\nexport const editBook = (_id, name, author, description, isbn, cat, floor, shelf, copies) => dispatch => {\n  const newBook = {\n    name: name,\n    author: author,\n    description: description,\n    isbn: isbn,\n    cat: cat,\n    floor: floor,\n    shelf: shelf,\n    copies: copies\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'books/' + _id, {\n    method: \"PUT\" //  ,     credentials: 'same-origin'\n    ,\n    body: JSON.stringify(newBook),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(editBookdispatch(response))).catch(error => {\n    alert('Your book could not be edited\\nError: ' + error.message);\n  });\n};\nexport const editPassword = (_id, username, password) => dispatch => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/password/' + _id, {\n    method: \"PUT\" //  ,     credentials: 'same-origin'\n    ,\n    body: JSON.stringify({\n      password: password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText + '\\n ');\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    let newCreds = {\n      username: username,\n      password: password\n    };\n    localStorage.removeItem('creds');\n    localStorage.setItem('creds', JSON.stringify(newCreds));\n    alert('Password changed successfully');\n    return dispatch(editPasswordDispatch(newCreds));\n  }).catch(error => {\n    alert('Your password could not be changed\\nError: ' + error.message);\n  });\n};\nexport const editUser = (_id, firstname, lastname, roll, email) => dispatch => {\n  const newUser = {\n    firstname: firstname,\n    lastname: lastname,\n    roll: roll,\n    email: email\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'users/' + _id, {\n    method: \"PUT\" //  ,     credentials: 'same-origin'\n    ,\n    body: JSON.stringify(newUser),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    localStorage.removeItem('userinfo');\n    localStorage.setItem('userinfo', JSON.stringify(response));\n    return dispatch(editUserdispatch(response));\n  }).catch(error => {\n    alert('Your profile could not be edited\\nError: ' + error.message + '\\n May be someone has already registered with that Roll No. or Email');\n  });\n};\nexport const deleteBook = _id => dispatch => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'books/' + _id, {\n    method: \"DELETE\" //  ,       credentials: \"same-origin\"\n    ,\n    headers: {\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(deleteBookdispatch(response))).catch(error => {\n    alert('Your book could not be deleted\\nError: ' + error.message);\n  });\n};\nexport const fetchBooks = () => dispatch => {\n  dispatch(booksLoading(true));\n  return fetch(baseUrl + 'books').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(books => dispatch(addBooks(books))).catch(error => dispatch(booksFailed(error.message)));\n};\nexport const fetchUsers = () => dispatch => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  dispatch(usersLoading(true));\n  return fetch(baseUrl + 'users', {\n    headers: {\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(users => dispatch(addUsers(users))).catch(error => dispatch(usersFailed(error.message)));\n};\nexport const booksLoading = () => ({\n  type: ActionTypes.BOOKS_LOADING\n});\nexport const booksFailed = errmess => ({\n  type: ActionTypes.BOOKS_FAILED,\n  payload: errmess\n});\nexport const addBooks = books => ({\n  type: ActionTypes.ADD_BOOKS,\n  payload: books\n});\nexport const addUsers = users => ({\n  type: ActionTypes.ADD_USERS,\n  payload: users\n});\nexport const usersLoading = () => ({\n  type: ActionTypes.USERS_LOADING\n});\nexport const editBookdispatch = books => ({\n  type: ActionTypes.EDIT_BOOK,\n  payload: books\n});\nexport const returnBookdispatch = issue => ({\n  type: ActionTypes.RETURN_ISSUE,\n  payload: issue\n});\nexport const editUserdispatch = USER => ({\n  type: ActionTypes.EDIT_USER,\n  payload: USER\n});\nexport const editPasswordDispatch = CREDS => ({\n  type: ActionTypes.EDIT_PASSWORD,\n  payload: CREDS\n});\nexport const deleteBookdispatch = resp => ({\n  type: ActionTypes.DELETE_BOOK,\n  payload: resp\n});\nexport const requestLogin = creds => {\n  return {\n    type: ActionTypes.LOGIN_REQUEST,\n    creds\n  };\n};\nexport const receiveLogin = response => {\n  return {\n    type: ActionTypes.LOGIN_SUCCESS,\n    token: response.token,\n    userinfo: response.userinfo\n  };\n};\nexport const loginError = message => {\n  return {\n    type: ActionTypes.LOGIN_FAILURE,\n    message\n  };\n};\nexport const loginUser = creds => dispatch => {\n  dispatch(requestLogin(creds));\n  return fetch(baseUrl + 'users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(creds)\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    if (response.success) {\n      // If login was successful, set the token in local storage\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('creds', JSON.stringify(creds));\n      localStorage.setItem('userinfo', JSON.stringify(response.userinfo));\n      dispatch(fetchIssues(!response.userinfo.admin));\n\n      if (response.userinfo.admin) {\n        dispatch(fetchUsers());\n      }\n\n      setTimeout(() => {\n        logoutUser();\n        alert('Your JWT token has expired. \\nPlease log in again to continue.');\n      }, 3600 * 1000); // Dispatch the success action\n\n      dispatch(receiveLogin(response));\n    } else {\n      var error = new Error('Error ' + response.status);\n      error.response = response;\n      throw error;\n    }\n  }).catch(error => {\n    alert(error.message + '\\n' + \"Username and password didn't match\");\n    return dispatch(loginError(error.message));\n  });\n};\nexport const registerUser = creds => dispatch => {\n  return fetch(baseUrl + 'users/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(creds)\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    if (response.success) {\n      // If Registration was successful, alert the user\n      alert('Registration Successful');\n    } else {\n      var error = new Error('Error ' + response.status);\n      error.response = response;\n      throw error;\n    }\n  }).catch(error => alert(error.message + '\\n' + 'May be someone has already registered with that username, email or Roll No.\\nTry Entering a new username,email or Roll No. '));\n};\nexport const addIssue = issue => ({\n  type: ActionTypes.ADD_ISSUE,\n  payload: issue\n});\nexport const postIssue = (bookId, studentId) => dispatch => {\n  const newIssue = {\n    book: bookId,\n    student: studentId\n  };\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'issues', {\n    method: \"POST\",\n    body: JSON.stringify(newIssue),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    } //   ,        credentials: \"same-origin\"\n\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    alert('Book issued successfully');\n    return dispatch(addIssue(response));\n  }).catch(error => {\n    alert('Book could not be issued\\nError: ' + error.message + '\\n' + 'May be the student has already issued 3 books and not returned. Please return them first. \\n' + 'or the book may not available. You can wait for some days, until the book is returned to library.');\n  });\n};\nexport const returnIssue = issueId => dispatch => {\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n  return fetch(baseUrl + 'issues/' + issueId, {\n    method: \"PUT\" //  ,     credentials: 'same-origin'\n    ,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => {\n    alert('Book returned successfully');\n    return dispatch(returnBookdispatch(response));\n  }).catch(error => {\n    alert('The book could not be returned\\nError: ' + error.message);\n  });\n};\nexport const fetchIssues = student => dispatch => {\n  let issueUrl;\n  const bearer = 'Bearer ' + localStorage.getItem('token');\n\n  if (student) {\n    issueUrl = 'issues/student';\n  } else {\n    issueUrl = 'issues';\n  }\n\n  dispatch(issuesLoading(true));\n  return fetch(baseUrl + issueUrl, {\n    headers: {\n      'Authorization': bearer\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(issues => dispatch(addIssues(issues))).catch(error => dispatch(issuesFailed(error.message)));\n};\nexport const issuesLoading = () => ({\n  type: ActionTypes.ISSUES_LOADING\n});\nexport const issuesFailed = errmess => ({\n  type: ActionTypes.ISSUES_FAILED,\n  payload: errmess\n});\nexport const addIssues = issues => ({\n  type: ActionTypes.ADD_ISSUES,\n  payload: issues\n});\nexport const usersFailed = errmess => ({\n  type: ActionTypes.USERS_FAILED,\n  payload: errmess\n});\nexport const requestLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_REQUEST\n  };\n};\nexport const receiveLogout = () => {\n  return {\n    type: ActionTypes.LOGOUT_SUCCESS\n  };\n};\nexport const logoutUser = () => dispatch => {\n  dispatch(requestLogout());\n  localStorage.removeItem('token');\n  localStorage.removeItem('creds');\n  localStorage.removeItem('userinfo');\n  dispatch(receiveLogout());\n};","map":{"version":3,"sources":["D:/sakshi college/cc miniproject/lib_management/client/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addBook","book","type","ADD_BOOK","payload","postBook","name","author","description","isbn","cat","floor","shelf","copies","dispatch","newBook","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","then","response","ok","error","Error","status","statusText","json","alert","catch","message","editBook","_id","editBookdispatch","editPassword","username","password","newCreds","removeItem","setItem","editPasswordDispatch","editUser","firstname","lastname","roll","email","newUser","editUserdispatch","deleteBook","deleteBookdispatch","fetchBooks","booksLoading","errmess","books","addBooks","booksFailed","fetchUsers","usersLoading","users","addUsers","usersFailed","BOOKS_LOADING","BOOKS_FAILED","ADD_BOOKS","ADD_USERS","USERS_LOADING","EDIT_BOOK","returnBookdispatch","issue","RETURN_ISSUE","USER","EDIT_USER","CREDS","EDIT_PASSWORD","resp","DELETE_BOOK","requestLogin","creds","LOGIN_REQUEST","receiveLogin","LOGIN_SUCCESS","token","userinfo","loginError","LOGIN_FAILURE","loginUser","success","fetchIssues","admin","setTimeout","logoutUser","registerUser","addIssue","ADD_ISSUE","postIssue","bookId","studentId","newIssue","student","returnIssue","issueId","issueUrl","issuesLoading","issues","addIssues","issuesFailed","ISSUES_LOADING","ISSUES_FAILED","ADD_ISSUES","USERS_FAILED","requestLogout","LOGOUT_REQUEST","receiveLogout","LOGOUT_SUCCESS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../baseUrl'\r\n\r\nexport const addBook = (book) => ({\r\n  type: ActionTypes.ADD_BOOK,\r\n  payload: book\r\n});\r\n\r\nexport const postBook = (name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\r\n    const newBook = {\r\n      name: name, author: author,\r\n       description: description, isbn: isbn,\r\n        cat: cat, floor: floor, \r\n        shelf: shelf, copies: copies\r\n    };\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'books', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newBook),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        }\r\n     //   ,        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { alert('Book added successfully');\r\n      return  dispatch(addBook(response));})\r\n    .catch(error =>  { alert('Your book could not be added\\nError: '+error.message); });\r\n};\r\n\r\nexport const editBook = (_id, name, author, description, isbn, cat, floor, shelf, copies) => (dispatch) => {\r\n\r\n  const newBook = {\r\n    name: name, author: author,\r\n     description: description, isbn: isbn,\r\n      cat: cat, floor: floor, \r\n      shelf: shelf, copies: copies\r\n  };\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'books/' + _id, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n      ,      body: JSON.stringify(newBook),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => (dispatch(editBookdispatch(response))))\r\n  .catch(error =>  {  \r\n  alert('Your book could not be edited\\nError: '+error.message); });\r\n};\r\n\r\nexport const editPassword = (_id,username,password) => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'users/password/' + _id, {\r\n    method: \"PUT\"\r\n  //  ,     credentials: 'same-origin'\r\n    ,      body: JSON.stringify({password: password}),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      'Authorization': bearer\r\n    } })\r\n.then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText+'\\n ');\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        throw error;\r\n  })\r\n.then(response => response.json())\r\n.then(response => { \r\n  let newCreds={username: username, password: password};\r\n  localStorage.removeItem('creds');\r\n  localStorage.setItem('creds', JSON.stringify(newCreds));\r\n  alert('Password changed successfully');\r\n  return dispatch(editPasswordDispatch(newCreds));})\r\n.catch(error =>  {  \r\nalert('Your password could not be changed\\nError: '+error.message); });\r\n}\r\n\r\nexport const editUser = (_id, firstname, lastname, roll, email) => (dispatch) => {\r\n\r\n  const newUser = {\r\nfirstname: firstname,\r\nlastname: lastname,\r\nroll: roll,\r\nemail: email  };\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'users/' + _id, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n      ,      body: JSON.stringify(newUser),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => { \r\n    localStorage.removeItem('userinfo');\r\n    localStorage.setItem('userinfo', JSON.stringify(response));\r\n    return dispatch(editUserdispatch(response));})\r\n  .catch(error =>  {  \r\n  alert('Your profile could not be edited\\nError: '+error.message+'\\n May be someone has already registered with that Roll No. or Email'); });\r\n};\r\n\r\nexport const deleteBook = (_id) => (dispatch) => {\r\n  \r\n  const bearer = 'Bearer ' + localStorage.getItem('token');    \r\n  return fetch(baseUrl + 'books/' + _id, {\r\n      method: \"DELETE\"\r\n    //  ,       credentials: \"same-origin\"\r\n      ,       headers: {\r\n        'Authorization': bearer\r\n      }\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(deleteBookdispatch(response)))\r\n  .catch(error =>  {alert('Your book could not be deleted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchBooks = () => (dispatch) => {\r\n    dispatch(booksLoading(true));\r\n    return fetch(baseUrl+'books')\r\n        .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(books => dispatch(addBooks(books)))\r\n    .catch(error => dispatch(booksFailed(error.message)));\r\n}\r\n\r\n\r\nexport const fetchUsers = () => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  dispatch(usersLoading(true));\r\n  return fetch(baseUrl+'users',{\r\n    headers: {\r\n      'Authorization': bearer\r\n    }\r\n  })\r\n      .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(users => dispatch(addUsers(users)))\r\n  .catch(error => dispatch(usersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const booksLoading = () => ({\r\n    type: ActionTypes.BOOKS_LOADING\r\n});\r\n\r\nexport const booksFailed = (errmess) => ({\r\n    type: ActionTypes.BOOKS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addBooks = (books) => ({\r\n    type: ActionTypes.ADD_BOOKS,\r\n    payload: books\r\n});\r\n\r\nexport const addUsers = (users) => ({\r\n  type: ActionTypes.ADD_USERS,\r\n  payload: users\r\n});\r\n\r\nexport const usersLoading = () => ({\r\n  type: ActionTypes.USERS_LOADING\r\n});\r\n\r\nexport const editBookdispatch = (books) => ({\r\n  type: ActionTypes.EDIT_BOOK,\r\n  payload: books\r\n});\r\n\r\nexport const returnBookdispatch = (issue) => ({\r\n  type: ActionTypes.RETURN_ISSUE,\r\n  payload: issue\r\n});\r\n\r\nexport const editUserdispatch = (USER) => ({\r\n  type: ActionTypes.EDIT_USER,\r\n  payload: USER\r\n});\r\n\r\nexport const editPasswordDispatch = (CREDS) => ({\r\n  type: ActionTypes.EDIT_PASSWORD,\r\n  payload: CREDS\r\n})\r\n\r\nexport const deleteBookdispatch = (resp) => ({\r\n  type: ActionTypes.DELETE_BOOK,\r\n  payload: resp\r\n});\r\n\r\nexport const requestLogin = (creds) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_REQUEST,\r\n      creds\r\n  }\r\n}\r\n\r\nexport const receiveLogin = (response) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_SUCCESS,\r\n      token: response.token,\r\n      userinfo: response.userinfo\r\n  }\r\n}\r\n\r\nexport const loginError = (message) => {\r\n  return {\r\n      type: ActionTypes.LOGIN_FAILURE,\r\n      message\r\n  }\r\n}\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n\r\n  dispatch(requestLogin(creds));\r\n  return fetch(baseUrl + 'users/login', {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type':'application/json' \r\n      },\r\n      body: JSON.stringify(creds)\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n          return response;\r\n      } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n      },\r\n      error => {\r\n          throw error;\r\n      })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n      if (response.success) {\r\n          // If login was successful, set the token in local storage\r\n          localStorage.setItem('token', response.token);\r\n          localStorage.setItem('creds', JSON.stringify(creds));\r\n          localStorage.setItem('userinfo', JSON.stringify(response.userinfo));    \r\n          dispatch(fetchIssues(!response.userinfo.admin));      \r\n          if(response.userinfo.admin) {\r\n            dispatch(fetchUsers())\r\n          }\r\n          setTimeout(()=>{\r\n            logoutUser();\r\n            alert('Your JWT token has expired. \\nPlease log in again to continue.');\r\n           },3600*1000);\r\n          // Dispatch the success action\r\n          dispatch(receiveLogin(response));\r\n      \r\n      }\r\n      else {\r\n          var error = new Error('Error ' + response.status);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n  })\r\n  .catch(error => {\r\n    alert(error.message+'\\n'+\"Username and password didn't match\");\r\n     return dispatch(loginError(error.message));})\r\n};\r\n\r\nexport const registerUser = (creds) => (dispatch) => {\r\n\r\n\r\n  return fetch(baseUrl + 'users/signup', {\r\n      method: 'POST',\r\n      headers: { \r\n          'Content-Type':'application/json' \r\n      },\r\n      body: JSON.stringify(creds)\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n          return response;\r\n      } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n      },\r\n      error => {\r\n          throw error;\r\n      })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n      if (response.success) {\r\n          // If Registration was successful, alert the user\r\n          alert('Registration Successful');\r\n        }\r\n      else {\r\n          var error = new Error('Error ' + response.status);\r\n          error.response = response;\r\n          throw error;\r\n      }\r\n  })\r\n  .catch(error => alert(error.message+'\\n'+\r\n      'May be someone has already registered with that username, email or Roll No.\\nTry Entering a new username,email or Roll No. '))\r\n};\r\n\r\nexport const addIssue = (issue) => ({\r\n  type: ActionTypes.ADD_ISSUE,\r\n  payload: issue\r\n});\r\n\r\nexport const postIssue = (bookId,studentId) => (dispatch) => {\r\n    const newIssue = {\r\n    book: bookId,\r\n    student: studentId \r\n    };\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n    return fetch(baseUrl + 'issues', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newIssue),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          'Authorization': bearer\r\n        }\r\n     //   ,        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { alert('Book issued successfully');\r\n      return  dispatch(addIssue(response));})\r\n    .catch(error =>  {\r\n      alert('Book could not be issued\\nError: '+error.message+'\\n'+\r\n      'May be the student has already issued 3 books and not returned. Please return them first. \\n'+\r\n      'or the book may not available. You can wait for some days, until the book is returned to library.'); });\r\n};\r\n\r\nexport const returnIssue = (issueId) => (dispatch) => {\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  return fetch(baseUrl + 'issues/' + issueId, {\r\n      method: \"PUT\"\r\n    //  ,     credentials: 'same-origin'\r\n    , headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        'Authorization': bearer\r\n      } })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => { \r\n    alert('Book returned successfully');\r\n    return dispatch(returnBookdispatch(response));})\r\n  .catch(error =>  {  \r\n  alert('The book could not be returned\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchIssues = (student) => (dispatch) => {\r\n  let issueUrl;\r\n  const bearer = 'Bearer ' + localStorage.getItem('token');\r\n  if(student) {\r\n    issueUrl='issues/student';\r\n  }\r\n  else {\r\n    issueUrl='issues';\r\n  }\r\n  dispatch(issuesLoading(true));\r\n  return fetch(baseUrl+issueUrl,{\r\n     headers: {\r\n        'Authorization': bearer\r\n       }\r\n  })\r\n      .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(issues => dispatch(addIssues(issues)))\r\n  .catch(error => dispatch(issuesFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const issuesLoading = () => ({\r\n  type: ActionTypes.ISSUES_LOADING\r\n});\r\n\r\nexport const issuesFailed = (errmess) => ({\r\n  type: ActionTypes.ISSUES_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addIssues = (issues) => ({\r\n  type: ActionTypes.ADD_ISSUES,\r\n  payload: issues\r\n});\r\n\r\nexport const usersFailed = (errmess) => ({\r\n  type: ActionTypes.USERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\n\r\nexport const requestLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_REQUEST\r\n  }\r\n}\r\n\r\nexport const receiveLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_SUCCESS\r\n  }\r\n}\r\n\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout())\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('creds');  \r\n  localStorage.removeItem('userinfo');  \r\n  dispatch(receiveLogout())\r\n}\r\n"]},"metadata":{},"sourceType":"module"}